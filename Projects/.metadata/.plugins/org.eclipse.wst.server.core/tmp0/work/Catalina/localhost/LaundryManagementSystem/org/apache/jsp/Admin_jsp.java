/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2024-10-13 12:24:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Admin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Order Management Admin</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        * {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            box-sizing: border-box;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: Arial, sans-serif;\r\n");
      out.write("            background-color: #f4f4f4;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .container {\r\n");
      out.write("            max-width: 900px;\r\n");
      out.write("            margin: 0 auto;\r\n");
      out.write("            background-color: #fff;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        h1 {\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .button-container {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: space-around;\r\n");
      out.write("            margin-top: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        button {\r\n");
      out.write("            padding: 15px 30px;\r\n");
      out.write("            background-color: #007bff;\r\n");
      out.write("            color: white;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        button:hover {\r\n");
      out.write("            background-color: #0056b3;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        form {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-direction: column;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            margin-top: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        label {\r\n");
      out.write("            margin-bottom: 10px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input {\r\n");
      out.write("            width: 80%;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            border: 1px solid #ccc;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        button[type=\"submit\"] {\r\n");
      out.write("            width: 50%;\r\n");
      out.write("            background-color: #28a745;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        button[type=\"submit\"]:hover {\r\n");
      out.write("            background-color: #218838;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Popup Styles */\r\n");
      out.write("        .popup {\r\n");
      out.write("            display: none;\r\n");
      out.write("            position: fixed;\r\n");
      out.write("            left: 50%;\r\n");
      out.write("            top: 50%;\r\n");
      out.write("            transform: translate(-50%, -50%);\r\n");
      out.write("            z-index: 1000;\r\n");
      out.write("            background-color: #fff;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\r\n");
      out.write("            max-width: 600px;\r\n");
      out.write("            width: 90%;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .popup-content {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .close {\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            right: 20px;\r\n");
      out.write("            top: 20px;\r\n");
      out.write("            font-size: 20px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            color: #333;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .close:hover {\r\n");
      out.write("            color: red;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .popup h2 {\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <h1>Order Management Admin</h1>\r\n");
      out.write("        <div class=\"button-container\">\r\n");
      out.write("            <!-- Add Order Button -->\r\n");
      out.write("            <button onclick=\"window.location.href='orderinsert.jsp'\">Add Order</button>\r\n");
      out.write("\r\n");
      out.write("            <!-- Update Order Button (Triggers Popup) -->\r\n");
      out.write("            <button onclick=\"openPopup('updateOrderPopup')\">Update Order</button>\r\n");
      out.write("\r\n");
      out.write("            <!-- Delete Order Button (Triggers Popup) -->\r\n");
      out.write("            <button onclick=\"openPopup('deleteOrderPopup')\">Delete Order</button>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- Update Order Popup -->\r\n");
      out.write("        <div id=\"updateOrderPopup\" class=\"popup\">\r\n");
      out.write("            <div class=\"popup-content\">\r\n");
      out.write("                <span class=\"close\" onclick=\"closePopup('updateOrderPopup')\">&times;</span>\r\n");
      out.write("                <h2>Update Order</h2>\r\n");
      out.write("                <form id=\"updateOrderForm\" method=\"post\" action=\"UpdateOrder\">\r\n");
      out.write("                \r\n");
      out.write("                    <label for=\"name\">Id:</label>\r\n");
      out.write("                    <input type=\"text\" id=\"id\" name=\"id\" required>\r\n");
      out.write("               \r\n");
      out.write("                    <label for=\"name\">Name:</label>\r\n");
      out.write("                    <input type=\"text\" id=\"name\" name=\"name\" required>\r\n");
      out.write("\r\n");
      out.write("                    <label for=\"address\">Address:</label>\r\n");
      out.write("                    <input type=\"text\" id=\"address\" name=\"address\" required>\r\n");
      out.write("\r\n");
      out.write("                    <label for=\"phone\">Phone:</label>\r\n");
      out.write("                    <input type=\"tel\" id=\"phone\" name=\"phone\" required>\r\n");
      out.write("\r\n");
      out.write("                    <label for=\"pickUpdate\">Pick-Up Date:</label>\r\n");
      out.write("                    <input type=\"date\" id=\"pickUpdate\" name=\"pickUpdate\" required>\r\n");
      out.write("\r\n");
      out.write("                    <label for=\"pickUptime\">Pick-Up Time:</label>\r\n");
      out.write("                    <input type=\"time\" id=\"pickUptime\" name=\"pickUptime\" required>\r\n");
      out.write("\r\n");
      out.write("                    <button type=\"submit\">Submit</button>\r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- Delete Order Popup -->\r\n");
      out.write("        <div id=\"deleteOrderPopup\" class=\"popup\">\r\n");
      out.write("            <div class=\"popup-content\">\r\n");
      out.write("                <span class=\"close\" onclick=\"closePopup('deleteOrderPopup')\">&times;</span>\r\n");
      out.write("                <h2>Delete Order</h2>\r\n");
      out.write("                <form id=\"deleteOrderForm\"  method=\"post\" action=\"DeleteOrder\">\r\n");
      out.write("                    <label for=\"deleteOrderId\">Order ID:</label>\r\n");
      out.write("                    <input type=\"number\" id=\"id\" name=\"id\" required>\r\n");
      out.write("                    <button type=\"submit\">Submit</button>\r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        // Function to open popup\r\n");
      out.write("        function openPopup(popupId) {\r\n");
      out.write("            document.getElementById(popupId).style.display = 'block';\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Function to close popup\r\n");
      out.write("        function closePopup(popupId) {\r\n");
      out.write("            document.getElementById(popupId).style.display = 'none';\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
