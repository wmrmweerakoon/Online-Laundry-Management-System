/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2024-10-11 19:26:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class HomePage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>CRUD Operations</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        /* General Styles */\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: 'Arial', sans-serif;\r\n");
      out.write("            background: linear-gradient(to bottom right, #e0eafc, #cfdef3); /* Gradient background */\r\n");
      out.write("            color: #333;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            height: 100vh; /* Full height for the body */\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-direction: column;\r\n");
      out.write("            align-items: center; /* Center content horizontally */\r\n");
      out.write("            justify-content: flex-start; /* Align content at the start */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        header {\r\n");
      out.write("            background-color: #4a90e2; /* Header color */\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            width: 100%; /* Full width */\r\n");
      out.write("            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2); /* Shadow effect */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        h1 {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            font-size: 2.5em;\r\n");
      out.write("            color: #fff; /* White text */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Message Display Section */\r\n");
      out.write("        .message {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            margin: 20px 0;\r\n");
      out.write("            font-size: 1.2em;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .message.success {\r\n");
      out.write("            color: #28a745; /* Green color */\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .message.error {\r\n");
      out.write("            color: #dc3545; /* Red color */\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* CRUD Section */\r\n");
      out.write("        .crud-section {\r\n");
      out.write("            padding: 40px 20px;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-wrap: wrap; /* Allow cards to wrap */\r\n");
      out.write("            justify-content: center; /* Center cards */\r\n");
      out.write("            gap: 20px; /* Space between cards */\r\n");
      out.write("            max-width: 1200px; /* Max width for the section */\r\n");
      out.write("            width: 100%; /* Full width */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .crud-card {\r\n");
      out.write("            background-color: #ffffff; /* White background */\r\n");
      out.write("            border-radius: 12px; /* Rounded corners */\r\n");
      out.write("            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15); /* Shadow effect */\r\n");
      out.write("            padding: 30px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            transition: transform 0.3s, box-shadow 0.3s;\r\n");
      out.write("            width: 250px; /* Fixed width for cards */\r\n");
      out.write("            position: relative; /* For pseudo-element positioning */\r\n");
      out.write("            overflow: hidden; /* Prevents overflow of pseudo-element */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .crud-card:hover {\r\n");
      out.write("            transform: translateY(-5px); /* Lift effect on hover */\r\n");
      out.write("            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.25); /* Darker shadow on hover */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .crud-card h3 {\r\n");
      out.write("            margin: 0 0 15px 0;\r\n");
      out.write("            font-size: 1.5em;\r\n");
      out.write("            color: #4a90e2; /* Header color */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .crud-card p {\r\n");
      out.write("            color: #555; /* Dark gray text */\r\n");
      out.write("            margin: 0 0 20px 0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Button Styles */\r\n");
      out.write("        a {\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("            padding: 12px 20px; /* Increased padding */\r\n");
      out.write("            border-radius: 25px; /* Round button edges */\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            color: white;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            transition: background-color 0.3s, transform 0.3s;\r\n");
      out.write("            position: relative; /* For button shadow */\r\n");
      out.write("            z-index: 1; /* On top of button background */\r\n");
      out.write("            border: none; /* Remove border */\r\n");
      out.write("            font-size: 1em; /* Font size */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .button-login {\r\n");
      out.write("            background-color: #007bff; /* Blue */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .button-register {\r\n");
      out.write("            background-color: #28a745; /* Green */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .button-read {\r\n");
      out.write("            background-color: #17a2b8; /* Teal */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .button-update {\r\n");
      out.write("            background-color: #ffc107; /* Yellow */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .button-delete {\r\n");
      out.write("            background-color: #dc3545; /* Red */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        a:hover {\r\n");
      out.write("            transform: scale(1.05); /* Scale effect on hover */\r\n");
      out.write("            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Button shadow on hover */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Footer Styles */\r\n");
      out.write("        footer {\r\n");
      out.write("            background-color: #4a90e2; /* Footer color */\r\n");
      out.write("            color: white;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            padding: 10px 0;\r\n");
      out.write("            width: 100%; /* Full width */\r\n");
      out.write("            position: relative;\r\n");
      out.write("            bottom: 0;\r\n");
      out.write("            font-size: 0.9em;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <header>\r\n");
      out.write("        <div class=\"header-content\">\r\n");
      out.write("            <h1>CRUD Operations</h1>\r\n");
      out.write("        </div>\r\n");
      out.write("    </header>\r\n");
      out.write("\r\n");
      out.write("    <!-- Message Display Section -->\r\n");
      out.write("    <div class=\"message\">\r\n");
      out.write("        ");

            String successMessage = (String) request.getAttribute("successMessage");
            String errorMessage = (String) request.getAttribute("errorMessage");
            if (successMessage != null) {
        
      out.write("\r\n");
      out.write("            <div class=\"message success\">\r\n");
      out.write("                ");
      out.print( successMessage );
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        ");

            }
            if (errorMessage != null) {
        
      out.write("\r\n");
      out.write("            <div class=\"message error\">\r\n");
      out.write("                ");
      out.print( errorMessage );
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        ");

            }
        
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <section class=\"crud-section\">\r\n");
      out.write("        <div class=\"crud-card\">\r\n");
      out.write("            <h3>Login</h3>\r\n");
      out.write("            <p>Access your account and manage records.</p>\r\n");
      out.write("            <a href=\"Login.jsp\" class=\"button-login\">Login</a>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"crud-card\">\r\n");
      out.write("            <h3>Register</h3>\r\n");
      out.write("            <p>Create a new account to start using the system.</p>\r\n");
      out.write("            <a href=\"Register.jsp\" class=\"button-register\">Register</a>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"crud-card\">\r\n");
      out.write("            <h3>Read</h3>\r\n");
      out.write("            <p>View all existing records in the database.</p>\r\n");
      out.write("            <a href=\"Read.jsp\" class=\"button-read\">Read</a>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"crud-card\">\r\n");
      out.write("            <h3>Update</h3>\r\n");
      out.write("            <p>Edit and update existing records.</p>\r\n");
      out.write("            <a href=\"Update.jsp\" class=\"button-update\">Update</a>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"crud-card\">\r\n");
      out.write("            <h3>Delete</h3>\r\n");
      out.write("            <p>Remove records you no longer need.</p>\r\n");
      out.write("            <a href=\"Delete.jsp\" class=\"button-delete\">Delete</a>\r\n");
      out.write("        </div>\r\n");
      out.write("    </section>\r\n");
      out.write("\r\n");
      out.write("    <footer>\r\n");
      out.write("        <p>&copy; 2024 CRUD Operations. All Rights Reserved.</p>\r\n");
      out.write("    </footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
