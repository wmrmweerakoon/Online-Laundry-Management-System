/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2024-10-08 02:44:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class track_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Track Orders - Online Laundry Management System</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"CSS/track.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <header>\r\n");
      out.write("        <nav>\r\n");
      out.write("            <ul>\r\n");
      out.write("                <li><a href=\"home.jsp\">Home</a></li>\r\n");
      out.write("                <li><a href=\"services.jsp\">Services</a></li>\r\n");
      out.write("                <li><a href=\"order.jsp\">Order Pickup</a></li>\r\n");
      out.write("                <li><a href=\"#\">Track Orders</a></li>\r\n");
      out.write("                <li><a href=\"pricing.jsp\">Pricing</a></li>\r\n");
      out.write("                <li><a href=\"contact.jsp\">Contact Us</a></li>\r\n");
      out.write("                <li><a href=\"Login.jsp\">Login</a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("            <div class=\"search-container\">\r\n");
      out.write("                <input type=\"text\" id=\"search\" placeholder=\"Search...\">\r\n");
      out.write("                <button onclick=\"performSearch()\">Search</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </nav>\r\n");
      out.write("    </header>\r\n");
      out.write("\r\n");
      out.write("    <!-- Track Orders Section -->\r\n");
      out.write("    <section class=\"track-orders-section\">\r\n");
      out.write("        <h1>Track Your Order</h1>\r\n");
      out.write("        <p>Enter your order number or customer details to track the status of your laundry order.</p>\r\n");
      out.write("\r\n");
      out.write("        <!-- Tracking Form -->\r\n");
      out.write("        <form class=\"tracking-form\" onsubmit=\"return validateForm()\">\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"order-number\">Order Number:</label>\r\n");
      out.write("                <input type=\"text\" id=\"order-number\" name=\"order-number\" placeholder=\"Enter your order number\" required>\r\n");
      out.write("                <span id=\"error-message\" style=\"color:red;\"></span>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"customer-email\">Customer Email (Optional):</label>\r\n");
      out.write("                <input type=\"email\" id=\"customer-email\" name=\"customer-email\" placeholder=\"Enter your email\">\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"order-date\">Order Date (Optional):</label>\r\n");
      out.write("                <input type=\"date\" id=\"order-date\" name=\"order-date\">\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <button  type=\"submit\">Track Order</button>\r\n");
      out.write("        </form>\r\n");
      out.write("        <!-- Order Status Information -->\r\n");
      out.write("        <div class=\"order-status\" id=\"order-status\">\r\n");
      out.write("            <!-- This will be populated dynamically -->\r\n");
      out.write("        </div>\r\n");
      out.write("    </section>\r\n");
      out.write("\r\n");
      out.write("    <!-- Social Media Footer -->\r\n");
      out.write("    <footer class=\"social-media\">\r\n");
      out.write("        <a href=\"https://www.facebook.com\" target=\"_blank\" class=\"social-icon\">\r\n");
      out.write("            <i class=\"fab fa-facebook-f\"></i>\r\n");
      out.write("        </a>\r\n");
      out.write("        <a href=\"https://www.youtube.com\" target=\"_blank\" class=\"social-icon\">\r\n");
      out.write("            <i class=\"fab fa-youtube\"></i>\r\n");
      out.write("        </a>\r\n");
      out.write("        <a href=\"https://www.instagram.com\" target=\"_blank\" class=\"social-icon\">\r\n");
      out.write("            <i class=\"fab fa-instagram\"></i>\r\n");
      out.write("        </a>\r\n");
      out.write("        <p>&copy; 2024 Online Laundry Management System. All rights reserved.</p>\r\n");
      out.write("    </footer>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        // Validation Function for Tracking Form\r\n");
      out.write("        function validateForm() {\r\n");
      out.write("            const orderNumber = document.getElementById('order-number').value;\r\n");
      out.write("            const errorMessage = document.getElementById('error-message');\r\n");
      out.write("\r\n");
      out.write("            // Check if the order number field is empty\r\n");
      out.write("            if (orderNumber === \"\") {\r\n");
      out.write("                errorMessage.textContent = \"Order number cannot be empty.\";\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // Simple validation: Ensure order number has at least 6 digits\r\n");
      out.write("            const orderNumberPattern = /^[0-9]{6,}$/;\r\n");
      out.write("            if (!orderNumberPattern.test(orderNumber)) {\r\n");
      out.write("                errorMessage.textContent = \"Please enter a valid order number (at least 6 digits).\";\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // Clear error message if input is valid\r\n");
      out.write("            errorMessage.textContent = \"\";\r\n");
      out.write("\r\n");
      out.write("            // Show success alert\r\n");
      out.write("            alert('Your order has been successfully tracked!');\r\n");
      out.write("            \r\n");
      out.write("            // Fetch order status\r\n");
      out.write("            fetchOrderStatus();\r\n");
      out.write("            \r\n");
      out.write("            // Return true to allow form submission\r\n");
      out.write("            return true;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Function to simulate fetching order status\r\n");
      out.write("        function fetchOrderStatus() {\r\n");
      out.write("            // You would typically use AJAX or Fetch API to retrieve order status from your server.\r\n");
      out.write("            // This is a placeholder to demonstrate dynamic content update.\r\n");
      out.write("\r\n");
      out.write("            const orderStatusElement = document.getElementById('order-status');\r\n");
      out.write("            orderStatusElement.style.display = 'block';\r\n");
      out.write("            orderStatusElement.innerHTML = `\r\n");
      out.write("                <h2>Order Status</h2>\r\n");
      out.write("                <p>Your order is currently being processed. We will update you with further details soon.</p>\r\n");
      out.write("            `;\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("    \r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("    ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
