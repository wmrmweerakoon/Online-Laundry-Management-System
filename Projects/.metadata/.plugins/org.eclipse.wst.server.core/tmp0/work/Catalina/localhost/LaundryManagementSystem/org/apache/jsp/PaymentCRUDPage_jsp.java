/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2024-10-09 10:18:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class PaymentCRUDPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>CRUD Operator Dashboard</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        /* Internal CSS */\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            box-sizing: border-box;\r\n");
      out.write("            background: linear-gradient(135deg, #74ebd5 0%, #acb6e5 100%);\r\n");
      out.write("            color: #333;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        header {\r\n");
      out.write("            background-color: black;\r\n");
      out.write("            color: white;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        header h1 {\r\n");
      out.write("            font-size: 2.5em;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Flex container for buttons, ensuring responsiveness */\r\n");
      out.write("        .crud-buttons {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: space-around;\r\n");
      out.write("            align-items: flex-start;\r\n");
      out.write("            flex-wrap: wrap;\r\n");
      out.write("            margin: 50px auto;\r\n");
      out.write("            width: 80%;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Styling for each button container with description */\r\n");
      out.write("        .crud-action {\r\n");
      out.write("            background-color: #fff;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            margin: 15px;\r\n");
      out.write("            flex: 1 1 calc(45% - 30px); /* Responsive: Each button takes up 45% width */\r\n");
      out.write("            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Button styling for each action */\r\n");
      out.write("        #createBtn {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("            background-color: #28a745; /* Green for Create */\r\n");
      out.write("            color: white;\r\n");
      out.write("            border: none;\r\n");
      out.write("            font-size: 18px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            transition: background-color 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #createBtn:hover {\r\n");
      out.write("            background-color: #218838;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #readBtn {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("            background-color: #007bff; /* Blue for Read */\r\n");
      out.write("            color: white;\r\n");
      out.write("            border: none;\r\n");
      out.write("            font-size: 18px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            transition: background-color 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #readBtn:hover {\r\n");
      out.write("            background-color: #0069d9;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #updateBtn {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("            background-color: #ffc107; /* Yellow for Update */\r\n");
      out.write("            color: white;\r\n");
      out.write("            border: none;\r\n");
      out.write("            font-size: 18px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            transition: background-color 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #updateBtn:hover {\r\n");
      out.write("            background-color: #e0a800;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #deleteBtn {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("            background-color: #dc3545; /* Red for Delete */\r\n");
      out.write("            color: white;\r\n");
      out.write("            border: none;\r\n");
      out.write("            font-size: 18px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            transition: background-color 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #deleteBtn:hover {\r\n");
      out.write("            background-color: #c82333;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Description text */\r\n");
      out.write("        .crud-action p {\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            color: #666;\r\n");
      out.write("            margin-top: 15px;\r\n");
      out.write("            text-align: justify;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Animation when hovering over the card */\r\n");
      out.write("        .crud-action:hover {\r\n");
      out.write("            transform: translateY(-10px);\r\n");
      out.write("            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        /* Responsive layout for smaller screens */\r\n");
      out.write("        @media (max-width: 768px) {\r\n");
      out.write("            .crud-action {\r\n");
      out.write("                flex: 1 1 100%; /* Full width on smaller screens */\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        footer {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            background-color: black;\r\n");
      out.write("            color: white;\r\n");
      out.write("            margin-top: 50px;\r\n");
      out.write("            box-shadow: 0 -4px 8px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("    \r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <header>\r\n");
      out.write("        <h1>CRUD Operator Dashboard</h1>\r\n");
      out.write("    </header>\r\n");
      out.write("\r\n");
      out.write("    <!-- CRUD Buttons Section with Descriptions -->\r\n");
      out.write("    <section class=\"crud-buttons\">\r\n");
      out.write("        <div class=\"crud-action\">\r\n");
      out.write("            <a href=\"PaymentPage.jsp\"><button id=\"createBtn\">Create</button></a>\r\n");
      out.write("            <p>Click to add a new entry. The 'Create' action opens a form for adding details to the system.</p>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"crud-action\">\r\n");
      out.write("            <a href=\"PayDetailsRead.jsp\"><button id=\"readBtn\">Read</button></a>\r\n");
      out.write("            <p>Click this button to view existing records. The 'Read' action retrieves data from the database and displays it for your review.</p>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"crud-action\">\r\n");
      out.write("            <a href=\"PaymentUpdate.jsp\"><button id=\"updateBtn\">Update</button></a>\r\n");
      out.write("            <p>Click this button to modify an existing entry. The 'Update' action allows you to select a record and change its details as needed.</p>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"crud-action\">\r\n");
      out.write("            <a href=\"PaymentDelete.jsp\"><button id=\"deleteBtn\">Delete</button></a>\r\n");
      out.write("            <p>Click to remove a record. This action permanently deletes data from the system.</p>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    </section>\r\n");
      out.write("\r\n");
      out.write("    <!-- Footer Section -->\r\n");
      out.write("    <footer>\r\n");
      out.write("        <p>&copy; 2024 CRUD Operator Dashboard. All rights reserved.</p>\r\n");
      out.write("    </footer>\r\n");
      out.write("    \r\n");
      out.write("    <!-- Internal JS -->\r\n");
      out.write("        <script>\r\n");
      out.write("        // JavaScript functions to simulate constructor-like behavior\r\n");
      out.write("\r\n");
      out.write("        // Create Button Function\r\n");
      out.write("        function createFunction() {\r\n");
      out.write("            alert(\"Create constructor has been called. Prepare to add a new entry.\");\r\n");
      out.write("            // Logic to simulate the constructor for creating can go here\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Read Button Function\r\n");
      out.write("        function readFunction() {\r\n");
      out.write("            alert(\"Read constructor has been called. Fetching data...\");\r\n");
      out.write("            // Logic to simulate the constructor for reading can go here\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Update Button Function\r\n");
      out.write("        function updateFunction() {\r\n");
      out.write("            alert(\"Update constructor has been called. Prepare to modify existing data.\");\r\n");
      out.write("            // Logic to simulate the constructor for updating can go here\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Delete Button Function\r\n");
      out.write("        function deleteFunction() {\r\n");
      out.write("            alert(\"Delete constructor has been called. Ready to remove data.\");\r\n");
      out.write("            // Logic to simulate the constructor for deleting can go here\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Assign event listeners after DOM is loaded\r\n");
      out.write("        window.onload = function() {\r\n");
      out.write("            document.getElementById(\"createBtn\").addEventListener(\"click\", createFunction);\r\n");
      out.write("            document.getElementById(\"readBtn\").addEventListener(\"click\", readFunction);\r\n");
      out.write("            document.getElementById(\"updateBtn\").addEventListener(\"click\", updateFunction);\r\n");
      out.write("            document.getElementById(\"deleteBtn\").addEventListener(\"click\", deleteFunction);\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
