/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2024-10-09 10:18:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class PaymentPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Payment - Online Laundry Management System</title>\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("    <!--Internal Css-->\r\n");
      out.write("    <style>\r\n");
      out.write("        /* Reset default styling */\r\n");
      out.write("* {\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Body Styling */\r\n");
      out.write("body {\r\n");
      out.write("    font-family: 'Arial', sans-serif;\r\n");
      out.write("    background-color: #f7f7f7;\r\n");
      out.write("    color: #333;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Payment Section */\r\n");
      out.write(".payment-section {\r\n");
      out.write("    max-width: 500px;\r\n");
      out.write("    margin: 50px auto;\r\n");
      out.write("    background-color: #fff;\r\n");
      out.write("    padding: 30px;\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n");
      out.write("    text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".payment-section h1 {\r\n");
      out.write("    font-size: 32px;\r\n");
      out.write("    color: #ff6f61;\r\n");
      out.write("    margin-bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".payment-section p {\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    margin-bottom: 30px;\r\n");
      out.write("    color: #666;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".payment-form {\r\n");
      out.write("    text-align: left;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-group {\r\n");
      out.write("    margin-bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-group label {\r\n");
      out.write("    font-size: 14px;\r\n");
      out.write("    color: #333;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".form-group input {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    border: 1px solid #ddd;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Specific Styling for the Enter Amount Field */\r\n");
      out.write("#amount {\r\n");
      out.write("    border: 1px solid #ddd;\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    margin-bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button[type=\"submit\"] {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    font-size: 18px;\r\n");
      out.write("    background-color: #ff6f61;\r\n");
      out.write("    color: white;\r\n");
      out.write("    border: none;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    transition: background-color 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button[type=\"submit\"]:hover {\r\n");
      out.write("    background-color: #ff4824;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Footer Styling */\r\n");
      out.write(".footer {\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    padding: 20px;\r\n");
      out.write("    background-color: #333;\r\n");
      out.write("    color: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <section class=\"payment-section\">\r\n");
      out.write("        <h1>Payment</h1>\r\n");
      out.write("        <p>Complete your payment details below to confirm your order.</p>\r\n");
      out.write("\r\n");
      out.write("        <!-- Payment Form -->\r\n");
      out.write("        <form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/PaymentCreateServlet\" method=\"post\" class=\"payment-form\" onsubmit=\"return validatePaymentForm()\">\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"name-on-card\">Name on Card:</label>\r\n");
      out.write("                <input type=\"text\" id=\"name-on-card\" name=\"name-on-card\" placeholder=\"Card Name\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"card-number\">Card Number:</label>\r\n");
      out.write("                <input type=\"text\" id=\"card-number\" name=\"card-number\" placeholder=\"Card Number\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"expiry-date\">Expiry Date:</label>\r\n");
      out.write("                <input type=\"date\" id=\"expiry-date\" name=\"expiry-date\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"cvv\">CVV:</label>\r\n");
      out.write("                <input type=\"text\" id=\"cvv\" name=\"cvv\" placeholder=\"CVV\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"billing-address\">Billing Address:</label>\r\n");
      out.write("                <input type=\"text\" id=\"billing-address\" name=\"billing-address\" placeholder=\"Billing Address\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Enter Amount Section -->\r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"amount\">Enter Amount (LKR):</label>\r\n");
      out.write("                <input type=\"number\" id=\"amount\" name=\"amount\" placeholder=\"Amount\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <button type=\"submit\">Make Payment</button>\r\n");
      out.write("        </form>\r\n");
      out.write("    </section>\r\n");
      out.write("\r\n");
      out.write("    <footer class=\"footer\">\r\n");
      out.write("        <p>&copy; 2024 Online Laundry Management System. All rights reserved.</p>\r\n");
      out.write("    </footer>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        // Basic form validation\r\n");
      out.write("        function validatePaymentForm() {\r\n");
      out.write("            const cardNumber = document.getElementById('card-number').value;\r\n");
      out.write("            const cvv = document.getElementById('cvv').value;\r\n");
      out.write("            const amount = document.getElementById('amount').value;\r\n");
      out.write("\r\n");
      out.write("            // Simple validation for card number (assumes 16 digits) and CVV (assumes 3 digits)\r\n");
      out.write("            const cardNumberPattern = /^\\d{16}$/;\r\n");
      out.write("            const cvvPattern = /^\\d{3}$/;\r\n");
      out.write("\r\n");
      out.write("            if (!cardNumberPattern.test(cardNumber)) {\r\n");
      out.write("                alert('Please enter a valid 16-digit card number.');\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            if (!cvvPattern.test(cvv)) {\r\n");
      out.write("                alert('Please enter a valid 3-digit CVV.');\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // Validate amount\r\n");
      out.write("            if (amount === \"\" || isNaN(amount) || amount <= 0) {\r\n");
      out.write("                alert('Please enter a valid amount.');\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            alert('Payment submitted successfully!');\r\n");
      out.write("            return true;\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
