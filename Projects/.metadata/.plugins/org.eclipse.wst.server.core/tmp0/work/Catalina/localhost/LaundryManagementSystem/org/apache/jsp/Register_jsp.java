/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2024-10-13 11:06:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Register - Online Laundry Management System</title>\r\n");
      out.write("   \r\n");
      out.write("    <style>\r\n");
      out.write("/* Reset default styles */\r\n");
      out.write("* {\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Body styling */\r\n");
      out.write("body {\r\n");
      out.write("    font-family: 'Arial', sans-serif;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("    background-color: #f3f4f6; /* Same background color as the login page */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Registration background */\r\n");
      out.write(".register-background {\r\n");
      out.write("    background: linear-gradient(135deg, #ff7e5f, #feb47b); /* Modern gradient */\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    height: 100vh;\r\n");
      out.write("    position: relative;\r\n");
      out.write("    animation: gradientBG 5s ease infinite alternate; /* Animation similar to login */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@keyframes gradientBG {\r\n");
      out.write("    0% { background-position: 0% 50%; }\r\n");
      out.write("    100% { background-position: 100% 50%; }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Main registration container */\r\n");
      out.write(".content-container {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    width: 80%;\r\n");
      out.write("    max-width: 1200px;\r\n");
      out.write("    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3); /* Deep shadow */\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("    overflow: hidden;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Text content styling */\r\n");
      out.write(".text-content {\r\n");
      out.write("    flex: 1;\r\n");
      out.write("    color: #fff;\r\n");
      out.write("    padding: 40px;\r\n");
      out.write("    background: rgba(0, 0, 0, 0.5); /* Transparent black background */\r\n");
      out.write("    display: flex;\r\n");
      out.write("    flex-direction: column;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    text-shadow: 1px 1px 5px rgba(0, 0, 0, 0.8); /* More prominent shadow */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("h1 {\r\n");
      out.write("    font-size: 3em;\r\n");
      out.write("    margin-bottom: 20px;\r\n");
      out.write("    letter-spacing: 1px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("p {\r\n");
      out.write("    font-size: 1.2em;\r\n");
      out.write("    margin-bottom: 40px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Registration form container */\r\n");
      out.write(".register-container {\r\n");
      out.write("    background-color: #fff;\r\n");
      out.write("    padding: 20px; /* Reduced padding */\r\n");
      out.write("    border-radius: 0 10px 10px 0;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    width: 500px; /* Width remains the same */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Form heading */\r\n");
      out.write("h2 {\r\n");
      out.write("    color: #ff6f61; /* Same color as the login page */\r\n");
      out.write("    margin-bottom: 20px; /* Reduced margin */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Form group styling */\r\n");
      out.write(".form-group {\r\n");
      out.write("    margin-bottom: 15px; /* Reduced margin */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("label {\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    display: block;\r\n");
      out.write("    color: #333;\r\n");
      out.write("    margin-bottom: 8px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Input fields styling */\r\n");
      out.write("input[type=\"text\"], input[type=\"email\"], input[type=\"password\"] {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    padding: 10px; /* Reduced padding */\r\n");
      out.write("    border: 1px solid #ddd;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    transition: border-color 0.3s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input:focus {\r\n");
      out.write("    border-color: #ff6f61; /* Same focus color as login page */\r\n");
      out.write("    box-shadow: 0 0 5px rgba(255, 111, 97, 0.5);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Button styling */\r\n");
      out.write("button {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    padding: 10px; /* Reduced padding */\r\n");
      out.write("    background-color: #ff6f61; /* Same button color */\r\n");
      out.write("    color: #fff;\r\n");
      out.write("    border: none;\r\n");
      out.write("    border-radius: 5px;\r\n");
      out.write("    font-size: 18px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    transition: background-color 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button:hover {\r\n");
      out.write("    background-color: #ff4824; /* Same hover color */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Error message styling */\r\n");
      out.write(".error {\r\n");
      out.write("    color: red;\r\n");
      out.write("    font-size: 14px;\r\n");
      out.write("    margin-top: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Link styling */\r\n");
      out.write("p a {\r\n");
      out.write("    color: #ff6f61; /* Same link color */\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("p a:hover {\r\n");
      out.write("    text-decoration: underline;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Media queries for responsiveness */\r\n");
      out.write("@media (max-width: 500px) {\r\n");
      out.write("    .register-background {\r\n");
      out.write("        padding: 20px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    h1 {\r\n");
      out.write("        font-size: 22px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    h2 {\r\n");
      out.write("        font-size: 20px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    button {\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("        font-size: 14px;\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("    </style>\r\n");
      out.write("    \r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"register-background\">\r\n");
      out.write("        <div class=\"content-container\">\r\n");
      out.write("            <div class=\"text-content\">\r\n");
      out.write("                <h1>Welcome to Our Laundry Service</h1>\r\n");
      out.write("                <p>Get your laundry done effortlessly. Register now to enjoy our hassle-free services!</p>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"register-container\">\r\n");
      out.write("                <h2>Create Your Account</h2>\r\n");
      out.write("                <p class=\"info-text\">Fill in the details below to register.</p>\r\n");
      out.write("\r\n");
      out.write("                <form id=\"registerForm\" action=\"RegisterServlet\" method=\"POST\" onsubmit=\"return validateForm()\">\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"fullname\">Full Name:</label>\r\n");
      out.write("                        <input type=\"text\" id=\"fullname\" name=\"fullname\" placeholder=\"Enter your full name\" required>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"username\">Username:</label>\r\n");
      out.write("                        <input type=\"text\" id=\"username\" name=\"username\" placeholder=\"Enter your username\" required>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"email\">Email:</label>\r\n");
      out.write("                        <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Enter your email\" required>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"password\">Password:</label>\r\n");
      out.write("                        <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Enter your password\" required>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"confirmPassword\">Confirm Password:</label>\r\n");
      out.write("                        <input type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\" placeholder=\"Confirm your password\" required>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <button type=\"submit\">Register</button>\r\n");
      out.write("                </form>\r\n");
      out.write("                <p>Already have an account? <a href=\"Login.jsp\">Login here</a></p>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        // Validation script remains unchanged\r\n");
      out.write("        function validateForm() {\r\n");
      out.write("            const fullname = document.getElementById('fullname').value.trim();\r\n");
      out.write("            const username = document.getElementById('username').value.trim();\r\n");
      out.write("            const email = document.getElementById('email').value.trim();\r\n");
      out.write("            const password = document.getElementById('password').value;\r\n");
      out.write("            const confirmPassword = document.getElementById('confirmPassword').value;\r\n");
      out.write("            \r\n");
      out.write("            let valid = true;\r\n");
      out.write("            let errorMessage = \"\";\r\n");
      out.write("\r\n");
      out.write("            clearErrors();\r\n");
      out.write("\r\n");
      out.write("            // Validate Full Name\r\n");
      out.write("            if (fullname === \"\") {\r\n");
      out.write("                valid = false;\r\n");
      out.write("                errorMessage = \"Full Name is required.\";\r\n");
      out.write("                showError('fullname', errorMessage);\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // Validate Username\r\n");
      out.write("            if (username === \"\") {\r\n");
      out.write("                valid = false;\r\n");
      out.write("                errorMessage = \"Username is required.\";\r\n");
      out.write("                showError('username', errorMessage);\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // Validate Email\r\n");
      out.write("            if (email === \"\") {\r\n");
      out.write("                valid = false;\r\n");
      out.write("                errorMessage = \"Email is required.\";\r\n");
      out.write("                showError('email', errorMessage);\r\n");
      out.write("            } else if (!validateEmail(email)) {\r\n");
      out.write("                valid = false;\r\n");
      out.write("                errorMessage = \"Invalid email format.\";\r\n");
      out.write("                showError('email', errorMessage);\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // Validate Password\r\n");
      out.write("            if (password === \"\") {\r\n");
      out.write("                valid = false;\r\n");
      out.write("                errorMessage = \"Password is required.\";\r\n");
      out.write("                showError('password', errorMessage);\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // Validate Confirm Password\r\n");
      out.write("            if (confirmPassword === \"\") {\r\n");
      out.write("                valid = false;\r\n");
      out.write("                errorMessage = \"Please confirm your password.\";\r\n");
      out.write("                showError('confirmPassword', errorMessage);\r\n");
      out.write("            } else if (password !== confirmPassword) {\r\n");
      out.write("                valid = false;\r\n");
      out.write("                errorMessage = \"Passwords do not match.\";\r\n");
      out.write("                showError('confirmPassword', errorMessage);\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            return valid;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function showError(inputId, message) {\r\n");
      out.write("            const errorElement = document.createElement('div');\r\n");
      out.write("            errorElement.classList.add('error');\r\n");
      out.write("            errorElement.textContent = message;\r\n");
      out.write("\r\n");
      out.write("            const inputField = document.getElementById(inputId);\r\n");
      out.write("            inputField.parentNode.insertBefore(errorElement, inputField.nextSibling);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function clearErrors() {\r\n");
      out.write("            const errorElements = document.querySelectorAll('.error');\r\n");
      out.write("            errorElements.forEach(element => {\r\n");
      out.write("                element.remove();\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function validateEmail(email) {\r\n");
      out.write("            const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n");
      out.write("            return re.test(email);\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
