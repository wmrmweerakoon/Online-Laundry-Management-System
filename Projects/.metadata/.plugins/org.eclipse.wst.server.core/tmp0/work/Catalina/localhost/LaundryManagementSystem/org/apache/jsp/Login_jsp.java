/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2024-10-11 18:36:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Login - Online Laundry Management System</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"CSS/Login.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"login-background\">\r\n");
      out.write("        <div class=\"content-container\">\r\n");
      out.write("            <div class=\"text-content\">\r\n");
      out.write("                <h1>Welcome to Our Laundry Service</h1>\r\n");
      out.write("                <p>Your satisfaction is our priority. Experience the convenience of managing your laundry online with us. Sign in to access your account or register for a new one.</p>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"login-container\">\r\n");
      out.write("                <h2>Login</h2>\r\n");
      out.write("                \r\n");
      out.write("                ");
      out.write("\r\n");
      out.write("                <div style=\"text-align: center; margin-bottom: 10px;\">\r\n");
      out.write("                    ");

                        String errorMessage = (String) request.getAttribute("errorMessage");
                        if (errorMessage != null) {
                    
      out.write("\r\n");
      out.write("                        <div style=\"color: red; font-weight: bold;\">\r\n");
      out.write("                            ");
      out.print( errorMessage );
      out.write("\r\n");
      out.write("                        </div>\r\n");
      out.write("                    ");

                        }
                    
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <form id=\"loginForm\" action=\"LoginServlet\" method=\"POST\" onsubmit=\"return validateForm()\">\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"username\">Username:</label>\r\n");
      out.write("                        <input type=\"text\" id=\"username\" name=\"username\" placeholder=\"Enter your username\">\r\n");
      out.write("                        <span class=\"error\" id=\"usernameError\"></span>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"email\">Email:</label>\r\n");
      out.write("                        <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Enter your email\">\r\n");
      out.write("                        <span class=\"error\" id=\"emailError\"></span>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"password\">Password:</label>\r\n");
      out.write("                        <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Enter your password\">\r\n");
      out.write("                        <span class=\"error\" id=\"passwordError\"></span>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <button type=\"submit\">Sign In</button>\r\n");
      out.write("                </form>\r\n");
      out.write("                <p>Don't have an account? <a href=\"Register.jsp\">Register here</a></p>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        function validateForm() {\r\n");
      out.write("            let isValid = true;\r\n");
      out.write("\r\n");
      out.write("            const username = document.getElementById('username').value.trim();\r\n");
      out.write("            const email = document.getElementById('email').value.trim();\r\n");
      out.write("            const password = document.getElementById('password').value.trim();\r\n");
      out.write("\r\n");
      out.write("            const usernameError = document.getElementById('usernameError');\r\n");
      out.write("            const emailError = document.getElementById('emailError');\r\n");
      out.write("            const passwordError = document.getElementById('passwordError');\r\n");
      out.write("\r\n");
      out.write("            usernameError.textContent = '';\r\n");
      out.write("            emailError.textContent = '';\r\n");
      out.write("            passwordError.textContent = '';\r\n");
      out.write("\r\n");
      out.write("            if (username === '') {\r\n");
      out.write("                usernameError.textContent = 'Username is required.';\r\n");
      out.write("                isValid = false;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            const emailPattern = /^[^ ]+@[^ ]+\\.[a-z]{2,3}$/;\r\n");
      out.write("            if (email === '') {\r\n");
      out.write("                emailError.textContent = 'Email is required.';\r\n");
      out.write("                isValid = false;\r\n");
      out.write("            } else if (!email.match(emailPattern)) {\r\n");
      out.write("                emailError.textContent = 'Enter a valid email address.';\r\n");
      out.write("                isValid = false;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            if (password === '') {\r\n");
      out.write("                passwordError.textContent = 'Password is required.';\r\n");
      out.write("                isValid = false;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            return isValid;\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
