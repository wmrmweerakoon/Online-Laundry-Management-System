package Services;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import Controller.DBconnect;
import Model.CusModel;

public class CusServices {

    public void insertData(CusModel cuModel) {
        try {
            // Get data from model
            String fullname = cuModel.getCusName();
            String username = cuModel.getCuName();
            String email = cuModel.getCusEmail();
            String password = cuModel.getCusPassword();
            String confirmPassword = cuModel.getConfPassword();

            // Establish the connection
            DBconnect db = new DBconnect();
            Statement stmt = db.getConnection().createStatement();

            // Insert data, excluding the AUTO_INCREMENT column (id)
            String sql = "INSERT INTO customer (Fname, Uname, email, pass, confPass) " +
                         "VALUES ('" + fullname + "', '" + username + "', '" + email + "', '" + password + "', '" + confirmPassword + "')";

            stmt.executeUpdate(sql);
            stmt.close();

            System.out.println("Data inserted successfully!");

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void updateData(CusModel cuModel) {
        try {
            // Example update query using the 'id' as the primary key
            DBconnect db = new DBconnect();
            String sql = "UPDATE customer SET Fname=?, Uname=?, email=?, pass=?, confPass=? WHERE id=?";
            
            PreparedStatement pstmt = db.getConnection().prepareStatement(sql);
            pstmt.setString(1, cuModel.getCusName());
            pstmt.setString(2, cuModel.getCuName());
            pstmt.setString(3, cuModel.getCusEmail());
            pstmt.setString(4, cuModel.getCusPassword());
            pstmt.setString(5, cuModel.getConfPassword());
            pstmt.setInt(6, cuModel.getCusId());  // Assuming you have an id field in the model
            
            pstmt.executeUpdate();
            pstmt.close();
            System.out.println("Data updated successfully!");

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void deleteData(int id) {
        try {
            // Delete data by 'id'
            DBconnect db = new DBconnect();
            String sql = "DELETE FROM customer WHERE id=?";
            
            PreparedStatement pstmt = db.getConnection().prepareStatement(sql);
            pstmt.setInt(1, id);
            
            pstmt.executeUpdate();
            pstmt.close();
            System.out.println("Data deleted successfully!");

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void showData() throws ClassNotFoundException {
        try (Connection conn = new DBconnect().getConnection()) {
            // SQL query to select all customer records
            String sql = "SELECT * FROM customer";

            try (PreparedStatement pstmt = conn.prepareStatement(sql);
                 ResultSet rs = pstmt.executeQuery()) {

                while (rs.next()) {
                    int id = rs.getInt("id");
                    String fullname = rs.getString("Fname");
                    String username = rs.getString("Uname");
                    String email = rs.getString("email");
                    String password = rs.getString("pass");
                    String confirmPassword = rs.getString("confPass");

                    // Displaying customer data
                    System.out.println("ID: " + id + ", Full Name: " + fullname + 
                                       ", Username: " + username + ", Email: " + email);
                }
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
